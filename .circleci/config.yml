# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # my custom docker image that has both python 3.7 and gcloud 218
      - image: liyanjia92/gcloudpython:g218-p370

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Authorize gcloud
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run: |
          sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      # Copy over the instance config for flask
      - run: |
          mkdir instance
          sudo gsutil cp gs://mypenny-config/flask.cfg instance/flask.cfg

      # build and push Docker image
      - run: |
          TAG=$(git log -1 --pretty=%h)
          docker build -t gcr.io/${GOOGLE_PROJECT_ID}/penny-api:$TAG .
          docker login -u _json_key -p "$GCLOUD_SERVICE_KEY" https://gcr.io
          docker push gcr.io/${GOOGLE_PROJECT_ID}/penny-api:$TAG
          sudo gcloud compute instances update-container api-instance-docker --container-image gcr.io/${GOOGLE_PROJECT_ID}/penny-api:$TAG
      # Delete the oldest image after deploying new image
      - run: |
          DELETE_DIGEST=$(sudo gcloud container images list-tags gcr.io/mypennyco/penny-api --sort-by=timestamp --limit=1 --format='get(digest)')
          DELETE_TAGS=$(sudo gcloud container images list-tags gcr.io/mypennyco/penny-api --sort-by=timestamp --limit=1 --format='get(tags)')
          echo $DELETE_TAGS
          echo $DELETE_DIGEST
          sudo gcloud container images delete gcr.io/${GOOGLE_PROJECT_ID}/penny-api:$DELETE_TAGS --force-delete-tags
